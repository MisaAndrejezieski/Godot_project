[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "uv2"

[sub_resource type="VisualShaderNodeTextureUniform" id=17]
uniform_name = "cloudTexture"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=4]
uniform_name = "albedo"
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorDecompose" id=18]

[sub_resource type="VisualShaderNodeVectorCompose" id=19]

[sub_resource type="VisualShaderNodeVectorOp" id=20]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1500, 1500, 1500 ) ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=16]

[resource]
code = "shader_type spatial;
render_mode specular_disabled, async_visible, unshaded, ambient_light_disabled;

uniform sampler2D albedo : hint_albedo;
uniform sampler2D cloudTexture : hint_albedo;



void vertex() {
// Input:10
	mat4 n_out10p0 = WORLD_MATRIX;

// Input:8
	vec3 n_out8p0 = VERTEX;

// TransformVectorMult:9
	vec3 n_out9p0 = (n_out10p0 * vec4(n_out8p0, 1.0)).xyz;

// VectorDecompose:11
	float n_out11p0 = n_out9p0.x;
	float n_out11p1 = n_out9p0.y;
	float n_out11p2 = n_out9p0.z;

// VectorCompose:12
	float n_in12p2 = 0.00000;
	vec3 n_out12p0 = vec3(n_out11p2, n_out11p0, n_in12p2);

// VectorOp:13
	vec3 n_in13p1 = vec3(1500.00000, 1500.00000, 1500.00000);
	vec3 n_out13p0 = n_out12p0 / n_in13p1;

// Output:0
	UV2 = n_out13p0.xy;

}

void fragment() {
// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(albedo, UV.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// Input:12
	vec3 n_out12p0 = vec3(UV2, 0.0);

// TextureUniform:13
	vec3 n_out13p0;
	float n_out13p1;
	{
		vec4 n_tex_read = texture(cloudTexture, n_out12p0.xy);
		n_out13p0 = n_tex_read.rgb;
		n_out13p1 = n_tex_read.a;
	}

// VectorOp:9
	vec3 n_out9p0 = n_out3p0 * n_out13p0;

// Output:0
	ALBEDO = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 48.1208, 54.4733 )
modes/specular = 4
flags/ambient_light_disabled = true
flags/unshaded = true
nodes/vertex/0/position = Vector2( 920, 40 )
nodes/vertex/8/node = SubResource( 15 )
nodes/vertex/8/position = Vector2( 160, 320 )
nodes/vertex/9/node = SubResource( 16 )
nodes/vertex/9/position = Vector2( 280, 260 )
nodes/vertex/10/node = SubResource( 14 )
nodes/vertex/10/position = Vector2( 160, 260 )
nodes/vertex/11/node = SubResource( 18 )
nodes/vertex/11/position = Vector2( 460, 260 )
nodes/vertex/12/node = SubResource( 19 )
nodes/vertex/12/position = Vector2( 620, 260 )
nodes/vertex/13/node = SubResource( 20 )
nodes/vertex/13/position = Vector2( 740, 140 )
nodes/vertex/connections = PoolIntArray( 10, 0, 9, 0, 8, 0, 9, 1, 9, 0, 11, 0, 11, 2, 12, 0, 11, 0, 12, 1, 12, 0, 13, 0, 13, 0, 0, 5 )
nodes/fragment/0/position = Vector2( 400, 160 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -60, -20 )
nodes/fragment/9/node = SubResource( 12 )
nodes/fragment/9/position = Vector2( 260, 100 )
nodes/fragment/12/node = SubResource( 13 )
nodes/fragment/12/position = Vector2( -100, 240 )
nodes/fragment/13/node = SubResource( 17 )
nodes/fragment/13/position = Vector2( 80, 180 )
nodes/fragment/connections = PoolIntArray( 12, 0, 13, 0, 13, 0, 9, 1, 9, 0, 0, 0, 3, 0, 9, 0 )
